<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string>CommitWindow="$TM_BUNDLE_PATH/Tools/CommitWindow.app/Contents/MacOS/CommitWindow"
export CommitWindow

if [[ -z $TM_SELECTED_FILES ]]; then
	CommitPaths=`echo \'$TM_FILEPATH\'`;
else
	CommitPaths="$TM_SELECTED_FILES";
fi
export CommitPaths

# setup TM_SVN if need be
echo "${TM_SVN:=svn}" &gt; /dev/null
export TM_SVN

ruby &lt;&lt;END
	require 'English'

	svn = ENV['TM_SVN']
	commit_paths = ENV['CommitPaths']
	commit_tool = ENV['CommitWindow']

	# Ignore files without changes
	commit_paths = %x{"#{svn}" status #{commit_paths}}.gsub(/^.(\s+)(.*)\n/) { %Q{'#{$~[2]}' } }

	if commit_paths.nil? or commit_paths.size == 0
		puts "File(s) not modified; nothing to commit."
		exit 0
	end

	# Nuke unnecessary bits of the path
	current_dir = Dir.pwd + "/"
	commit_paths.gsub!(/'#{current_dir}/, "'")

	commit_args = %x{"#{commit_tool}" #{commit_paths}}

	status = \$CHILD_STATUS
	if status != 0
		puts "Canceled (#{status})."
		exit -1
	end

	puts "&lt;h3&gt;Commit results&lt;/h3&gt;"
	puts "&lt;hr&gt;"
	puts "&lt;tt&gt;"
	puts %Q{"#{svn}" commit #{commit_args}}
	puts "&lt;/tt&gt;"
	puts "&lt;hr&gt;"
	puts "&lt;p&gt; &lt;pre&gt;"
	STDOUT.flush
	puts %x{"#{svn}" commit #{commit_args}}

END
</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@b</string>
	<key>name</key>
	<string>Commit</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>5F2BCB27-7A5B-11D9-A61B-000A95A89C98</string>
</dict>
</plist>
